/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ltm.lmt.view;


import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;

/**
 *
 * @author Son
 */
public class MessagePanel extends javax.swing.JPanel {

    /**
     * Creates new form MessagePanel
     */
    public MessagePanel() {
        initComponents();
    }

    public JPanel createRecieveMessagePanel(String message, String time) {
        JPanel recieveMessagePanel = new JPanel();
        recieveMessagePanel.setLayout(new BoxLayout(recieveMessagePanel, BoxLayout.X_AXIS));
        recieveMessagePanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        
        // Avatar panel (trái)
        JPanel avatarPanel = createAvatarPanel("A");
        
        // Tin nhắn (giữa)
        JLabel messageLabel = new JLabel("<html><div style='width: 250px;'>" + message + "</div></html>");
        messageLabel.setBorder(null);
        
        // Thời gian (phải)
        JLabel timeLabel = new JLabel(time);
        timeLabel.setForeground(Color.GRAY);
        
        recieveMessagePanel.add(avatarPanel);
        recieveMessagePanel.add(Box.createRigidArea(new Dimension(10, 0)));
        recieveMessagePanel.add(messageLabel);
        recieveMessagePanel.add(Box.createRigidArea(new Dimension(10, 0)));
        recieveMessagePanel.add(timeLabel);
        
        recieveMessagePanel.setMaximumSize(new Dimension(480, recieveMessagePanel.getPreferredSize().height));
        recieveMessagePanel.setBackground(new Color(255, 241, 241));
        
        return recieveMessagePanel;
    }
    
    public JPanel createSendMessagePanel(String message, String time) {
        JPanel sendMessagePanel = new JPanel();
        sendMessagePanel.setLayout(new BoxLayout(sendMessagePanel, BoxLayout.X_AXIS));
        sendMessagePanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        
        // Avatar panel (phải)
        JPanel avatarPanel = createAvatarPanel("S");
        
        // Tin nhắn (giữa)
        JLabel messageLabel = new JLabel("<html><div style='width: 250px; text-align: right;'>" + message + "</div></html>");
        messageLabel.setHorizontalAlignment(SwingConstants.RIGHT); 
        
        // Thời gian (trái)
        JLabel timeLabel = new JLabel(time);
        timeLabel.setForeground(Color.GRAY);
        
        sendMessagePanel.add(timeLabel);
        sendMessagePanel.add(Box.createRigidArea(new Dimension(10, 0)));
        sendMessagePanel.add(messageLabel);
        sendMessagePanel.add(Box.createRigidArea(new Dimension(10, 0)));
        sendMessagePanel.add(avatarPanel);
        
        sendMessagePanel.setMaximumSize(new Dimension(480, sendMessagePanel.getPreferredSize().height));
        sendMessagePanel.setBackground(new Color(255, 241, 241));
        return sendMessagePanel;
    }
    
    private JPanel createAvatarPanel(String initialName) {
        JPanel avatarPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                int diameter = Math.min(getWidth(), getHeight()) - 2;
                int x = (getWidth() - diameter) / 2;
                int y = (getHeight() - diameter) / 2;

                g2d.setColor(Color.BLACK);
                g2d.fillOval(x, y, diameter, diameter);

                g2d.setColor(Color.WHITE);
                g2d.setFont(new Font("Quicksand", Font.BOLD, 12));
                FontMetrics fm = g2d.getFontMetrics();
                int textX = x + (diameter - fm.stringWidth(initialName)) / 2;
                int textY = y + (diameter + fm.getAscent()) / 2 - 3;
                g2d.drawString(initialName, textX, textY);
            }
        };
        avatarPanel.setPreferredSize(new Dimension(25, 25));
        avatarPanel.setOpaque(false);
        return avatarPanel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
